import { b as VElement } from './types-621449b5.js';

interface Route {
    vnode?: VElement;
    html?: Document;
    hook?: RouteHook;
}
declare type RouteHook = (url: URL, route: Route) => boolean;

declare const setRoute: (path: string, route: Route) => void;
declare const createRoute: (vnode: VElement, hook?: (url: URL) => boolean) => {
    vnode: VElement;
    hook: (url: URL) => boolean;
};
declare const getEl: (el: HTMLElement, selector?: string | undefined) => HTMLElement;
declare const parseContent: (content: string, url: URL) => Document;
declare const getContent: (url: URL | string, options?: RequestInit | undefined) => Promise<string | void>;
declare const navigate: (url: URL, selector?: string | undefined, opts?: RequestInit | undefined, goBack?: boolean, scroll?: number) => Promise<void>;
declare const router: (selector?: string | undefined, routes?: Record<string, Route>) => Map<string, Route>;

declare const setAttribute: (el: Element, attr: string, base: string | URL) => void;
declare const normalizeRelativeURLs: (el: Element | Document, base: string | URL) => void;
declare const isLocalURL: (href: string) => boolean;
declare const getURL: ({ target }: Event) => URL | undefined;

export { createRoute, getContent, getEl, getURL, isLocalURL, navigate, normalizeRelativeURLs, parseContent, router, setAttribute, setRoute };
