'use strict';

const h = require('./h.cjs');

const fromDomNodeToVNode = (el) => {
  if (el[h.OLD_VNODE_FIELD])
    return el[h.OLD_VNODE_FIELD];
  if (el instanceof Text)
    return String(el.nodeValue);
  if (el instanceof Comment)
    return void 0;
  const props = {};
  const children = new Array(el.children.length).fill(0);
  for (let i = 0; i < el.attributes.length; i++) {
    const { nodeName, nodeValue } = el.attributes[i];
    props[nodeName] = nodeName === "million-flag" ? h.Flags[nodeName] : nodeValue;
  }
  for (let i = 0; i < el.childNodes.length; i++) {
    children[i] = fromDomNodeToVNode(el.childNodes.item(i));
  }
  const vnode = h.h(el.tagName.toLowerCase(), props, ...children);
  el[h.OLD_VNODE_FIELD] = vnode;
  return vnode;
};
const fromStringToDomNode = (html) => {
  const doc = new DOMParser().parseFromString(`<t>${html.trim()}</t>`, "text/xml");
  const el = doc.firstChild.firstChild;
  return el;
};

exports.fromDomNodeToVNode = fromDomNodeToVNode;
exports.fromStringToDomNode = fromStringToDomNode;
