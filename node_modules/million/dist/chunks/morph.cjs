'use strict';

const render = require('./render.cjs');
const convert = require('./convert.cjs');

const cache = /* @__PURE__ */ new Map();
const memo = (key) => {
  if (cache.has(key)) {
    return cache.get(key);
  } else {
    const vnode = convert.fromDomNodeToVNode(convert.fromStringToDomNode(key));
    cache.set(key, vnode);
    return vnode;
  }
};

const morph = (newDOMNode, oldDOMNode, hook = () => true) => render.patch(oldDOMNode, typeof newDOMNode === "string" ? memo(newDOMNode) : convert.fromDomNodeToVNode(newDOMNode), convert.fromDomNodeToVNode(oldDOMNode), hook);

exports.memo = memo;
exports.morph = morph;
